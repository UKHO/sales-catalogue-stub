trigger:
  - main

pr: none

stages:
  - stage: DEV
    dependsOn: []
    variables:
      - group: SalesCatStubDEV
    jobs:
      - deployment: Terraform
        environment: SalesCatStubDEV
        pool:
          #vmImage: 'ubuntu-latest' use when hosted agent needed
          name: UKHO Ubuntu 1804
        container: ukhydrographicoffice/terraform-azure-make:latest
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - bash: |
                    echo "$STORAGE_ACCOUNT_NAME"
                    echo "$RESOURCE_GROUP_NAME"

                    echo "Execute Terraform init"
                    terraform init -backend-config="storage_account_name=${STORAGE_ACCOUNT_NAME}" -backend-config="resource_group_name=${RESOURCE_GROUP_NAME}"

                    echo "Execute Terraform plan"
                    terraform plan -refresh=true -out=tfplan -input=false
                  displayName: Terraform Plan
                  workingDirectory: deployment/
                  failOnStderr: true
                  env:
                    ARM_SUBSCRIPTION_ID: $(TERRAFORM-SUBSCRIPTION-ID)
                    ARM_TENANT_ID: $(TERRAFORM-TENANT-ID)
                    ARM_ACCESS_KEY: $(TERRAFORM-ACCESS-KEY)
                    ARM_CLIENT_ID: $(TERRAFORM-CLIENT-ID)
                    ARM_CLIENT_SECRET: $(TERRAFORM-CLIENT-SECRET)
                    TF_VAR_SERVICENAME: $(TERRAFORM-SERVICENAME)
                    TF_VAR_MAIN_LOCATION: $(TERRAFORM-MAIN-LOCATION)
                    TF_VAR_DEPLOY_ENVIRONMENT: $(TERRAFORM-DEPLOY-ENVIRONMENT)
                    TF_VAR_ENV_CONTEXT: $(TERRAFORM-ENV-CONTEXT)
                    TF_VAR_WEBSITE_DNS_SERVER: $(TERRAFORM-WEBSITE-DNS-SERVER)
                    TF_VAR_API_ENG_OUTGOING_IP: $(TERRAFORM-API-ENG-OUTGOING-IP)
                    TF_VAR_API_UKHO_MAIN_OUTGOING_IP: $(TERRAFORM-API-UKHO-MAIN-OUTGOING-IP)
                    TF_VAR_SPOKE_RG: $(TERRAFORM-SPOKE-RG)
                    TF_VAR_SPOKE_SUBNET_NAME: $(TERRAFORM-SPOKE-SUBNET-NAME)
                    TF_VAR_SPOKE_VNET_NAME: $(TERRAFORM-SPOKE-VNET-NAME)
                    STORAGE_ACCOUNT_NAME: $(TERRAFORM-STORAGE-ACCOUNT-NAME)
                    RESOURCE_GROUP_NAME: $(TERRAFORM-RESOURCE-GROUP-NAME)
                - bash: |
                    echo "Execute Terraform apply"
                    terraform apply "tfplan"
                  displayName: Terraform Apply
                  workingDirectory: deployment/
                  # Only alow terraform in LIVE from main
                  # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
                  failOnStderr: true
                  env:
                    ARM_SUBSCRIPTION_ID: $(TERRAFORM-SUBSCRIPTION-ID)
                    ARM_TENANT_ID: $(TERRAFORM-TENANT-ID)
                    ARM_ACCESS_KEY: $(TERRAFORM-ACCESS-KEY)
                    ARM_CLIENT_ID: $(TERRAFORM-CLIENT-ID)
                    ARM_CLIENT_SECRET: $(TERRAFORM-CLIENT-SECRET)
                    TF_VAR_SERVICENAME: $(TERRAFORM-SERVICENAME)
                    TF_VAR_MAIN_LOCATION: $(TERRAFORM-MAIN-LOCATION)
                    TF_VAR_DEPLOY_ENVIRONMENT: $(TERRAFORM-DEPLOY-ENVIRONMENT)
                    TF_VAR_ENV_CONTEXT: $(TERRAFORM-ENV-CONTEXT)
                    TF_VAR_WEBSITE_DNS_SERVER: $(TERRAFORM-WEBSITE-DNS-SERVER)
                    TF_VAR_API_ENG_OUTGOING_IP: $(TERRAFORM-API-ENG-OUTGOING-IP)
                    TF_VAR_API_UKHO_MAIN_OUTGOING_IP: $(TERRAFORM-API-UKHO-MAIN-OUTGOING-IP)
                    TF_VAR_SPOKE_RG: $(TERRAFORM-SPOKE-RG)
                    TF_VAR_SPOKE_SUBNET_NAME: $(TERRAFORM-SPOKE-SUBNET-NAME)
                    TF_VAR_SPOKE_VNET_NAME: $(TERRAFORM-SPOKE-VNET-NAME)

  - stage: QA
    dependsOn: []
    variables:
      - group: SalesCatStubQA
    jobs:
      - deployment: Terraform
        environment: SalesCatStubQA
        pool:
          #vmImage: 'ubuntu-latest' use when hosted agent needed
          name: UKHO Ubuntu 1804
        container: ukhydrographicoffice/terraform-azure-make:latest
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - bash: |
                    echo "$STORAGE_ACCOUNT_NAME"
                    echo "$RESOURCE_GROUP_NAME"

                    echo "Execute Terraform init"
                    terraform init -backend-config="storage_account_name=${STORAGE_ACCOUNT_NAME}" -backend-config="resource_group_name=${RESOURCE_GROUP_NAME}"

                    echo "Execute Terraform plan"
                    terraform plan -refresh=true -out=tfplan -input=false
                  displayName: Terraform Plan
                  workingDirectory: deployment/
                  failOnStderr: true
                  env:
                    ARM_SUBSCRIPTION_ID: $(TERRAFORM-SUBSCRIPTION-ID)
                    ARM_TENANT_ID: $(TERRAFORM-TENANT-ID)
                    ARM_ACCESS_KEY: $(TERRAFORM-ACCESS-KEY)
                    ARM_CLIENT_ID: $(TERRAFORM-CLIENT-ID)
                    ARM_CLIENT_SECRET: $(TERRAFORM-CLIENT-SECRET)
                    TF_VAR_SERVICENAME: $(TERRAFORM-SERVICENAME)
                    TF_VAR_MAIN_LOCATION: $(TERRAFORM-MAIN-LOCATION)
                    TF_VAR_DEPLOY_ENVIRONMENT: $(TERRAFORM-DEPLOY-ENVIRONMENT)
                    TF_VAR_ENV_CONTEXT: $(TERRAFORM-ENV-CONTEXT)
                    TF_VAR_WEBSITE_DNS_SERVER: $(TERRAFORM-WEBSITE-DNS-SERVER)
                    TF_VAR_API_ENG_OUTGOING_IP: $(TERRAFORM-API-ENG-OUTGOING-IP)
                    TF_VAR_API_UKHO_MAIN_OUTGOING_IP: $(TERRAFORM-API-UKHO-MAIN-OUTGOING-IP)
                    TF_VAR_SPOKE_RG: $(TERRAFORM-SPOKE-RG)
                    TF_VAR_SPOKE_SUBNET_NAME: $(TERRAFORM-SPOKE-SUBNET-NAME)
                    TF_VAR_SPOKE_VNET_NAME: $(TERRAFORM-SPOKE-VNET-NAME)
                    STORAGE_ACCOUNT_NAME: $(TERRAFORM-STORAGE-ACCOUNT-NAME)
                    RESOURCE_GROUP_NAME: $(TERRAFORM-RESOURCE-GROUP-NAME)
                - bash: |
                    echo "Execute Terraform apply"
                    terraform apply "tfplan"
                  displayName: Terraform Apply
                  workingDirectory: deployment/
                  # Only alow terraform in LIVE from main
                  # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
                  failOnStderr: true
                  env:
                    ARM_SUBSCRIPTION_ID: $(TERRAFORM-SUBSCRIPTION-ID)
                    ARM_TENANT_ID: $(TERRAFORM-TENANT-ID)
                    ARM_ACCESS_KEY: $(TERRAFORM-ACCESS-KEY)
                    ARM_CLIENT_ID: $(TERRAFORM-CLIENT-ID)
                    ARM_CLIENT_SECRET: $(TERRAFORM-CLIENT-SECRET)
                    TF_VAR_SERVICENAME: $(TERRAFORM-SERVICENAME)
                    TF_VAR_MAIN_LOCATION: $(TERRAFORM-MAIN-LOCATION)
                    TF_VAR_DEPLOY_ENVIRONMENT: $(TERRAFORM-DEPLOY-ENVIRONMENT)
                    TF_VAR_ENV_CONTEXT: $(TERRAFORM-ENV-CONTEXT)
                    TF_VAR_WEBSITE_DNS_SERVER: $(TERRAFORM-WEBSITE-DNS-SERVER)
                    TF_VAR_API_ENG_OUTGOING_IP: $(TERRAFORM-API-ENG-OUTGOING-IP)
                    TF_VAR_API_UKHO_MAIN_OUTGOING_IP: $(TERRAFORM-API-UKHO-MAIN-OUTGOING-IP)
                    TF_VAR_SPOKE_RG: $(TERRAFORM-SPOKE-RG)
                    TF_VAR_SPOKE_SUBNET_NAME: $(TERRAFORM-SPOKE-SUBNET-NAME)
                    TF_VAR_SPOKE_VNET_NAME: $(TERRAFORM-SPOKE-VNET-NAME)
